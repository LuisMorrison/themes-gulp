@mixin opacity($value) {
  $filter-val: $value * 100;
  filter: alpha(opacity=$filter-val);
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$filter-val+")";
  -moz-opacity: $value;
  -khtml-opacity: $value;
  opacity: $value;
}

@mixin clearfix() {
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin border-radius($rad: 0) {
  -webkit-border-radius: $rad;
  -moz-border-radius: $rad;
  border-radius: $rad;
}

@mixin background-size($val: auto) {
  -webkit-background-size: $val;
  -moz-background-size: $val;
  -o-background-size: $val;
  background-size: $val;
}

@mixin transition($duration: 0.5, $timing: ease) {
  -webkit-transition: all $duration + s $timing;
  -moz-transition: all $duration + s $timing;
  -o-transition: all $duration + s $timing;
  -ms-transition: all $duration + s $timing;
  transition: all $duration + s $timing;
}

@mixin transform($type, $val) {
  @if $type == 'rotate' {
    -webkit-transform: rotate($val);
    -moz-transform: rotate($val);
    -ms-transform: rotate($val);
    transform: rotate($val);
  }
  @if $type == 'rotateY' {
    -webkit-transform: rotateY($val);
    -moz-transform: rotateY($val);
    -ms-transform: rotateY($val);
    transform: rotateY($val);
  }
  @if $type == 'rotate-skew' {
    -webkit-transform: rotate($val) skewX(0deg);
    -moz-transform: rotate($val) skewX(0deg);
    -ms-transform: rotate($val) skewX(0deg);
    transform: rotate($val) skewX(0deg);
  }
  @if $type == 'scale' {
    -webkit-transform: scale($val);
    -moz-transform: scale($val);
    -ms-transform: scale($val);
    transform: scale($val);
  }
  @if $type == 'translate' {
    -webkit-transform: translateX($val) translateY($val);
    -moz-transform: translateX($val) translateY($val);
    -ms-transform: translateX($val) translateY($val);
    transform: translateX($val) translateY($val);
  }
}

@mixin form-control {
  &:focus {
    outline: none;
    box-shadow: none;
  }
  font-size: 16px;
  padding: 10px 12px;
  border-width: 2px;
}

@mixin box-shadow($h: 0, $v: 1px, $blur: 3px, $spread: null, $alpha: 0.25, $inset: null) {
  -webkit-box-shadow: $inset $h $v $blur $spread rgba(0, 0, 0, $alpha);
  -moz-box-shadow: $inset $h $v $blur $spread rgba(0, 0, 0, $alpha);
  box-shadow: $inset $h $v $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin box-shadow-extra($h: 0, $v: 12px, $blur: 36px, $spread: -4px, $alpha: 0.4) {
  -webkit-box-shadow: $h $v $blur $spread rgba(0, 0, 0, $alpha);
  -moz-box-shadow: $h $v $blur $spread rgba(0, 0, 0, $alpha);
  box-shadow: $h $v $blur $spread rgba(0, 0, 0, $alpha);
}

@mixin box-shadow-inset {
  -webkit-box-shadow: inset 0 1px 3px 0 rgba(0, 0, 0, 0.25);
  -moz-box-shadow: inset 0 1px 3px 0 rgba(0, 0, 0, 0.25);
  box-shadow: inset 0 1px 3px 0 rgba(0, 0, 0, 0.25);
}

@mixin vertical-align($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: perspective(1px) translateY(-50%);
  -moz-transform: perspective(1px) translateY(-50%);
  -ms-transform: perspective(1px) translateY(-50%);
  transform: perspective(1px) translateY(-50%);
}

@mixin ellipsis {
  white-space: nowrap;
  overflow: hidden;
  -o-text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
  text-overflow: ellipsis;
}

@mixin unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin backface-visibility($visibility: hidden) {
  -webkit-backface-visibility: $visibility;
  -moz-backface-visibility: $visibility;
  -o-backface-visibility: $visibility;
  backface-visibility: $visibility;
}

@mixin replace-text($img, $color: 'transparent', $x: 50%, $y: 50% ) {
  text-indent: -9999em;
  overflow: hidden;
  background: $color url($img) no-repeat $x $y;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
